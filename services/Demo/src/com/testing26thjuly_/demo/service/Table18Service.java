/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.demo.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.demo.Table18;
import com.testing26thjuly_.demo.Table18Id;

/**
 * Service object for domain model class Table18.
 *
 * @see {@link Table18}
 */
public interface Table18Service {

    /**
     * Creates a new Table18.
     *
     * @param table18 The information of the created CompositeTable.
     * @return The created Table18.
     */
	Table18 create(Table18 table18);


	/**
	 * Finds Table18 by id.
	 *
	 * @param table18Id The id of the wanted Table18.
	 * @return The found Table18. If no Table18 is found, this method returns null.
	 */
	Table18 getById(Table18Id table18Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table18.
	 *
	 * @param table18 The information of the updated Table18.
	 * @return The updated Table18.
     *
	 * @throws EntityNotFoundException if no Table18 is found with given id.
	 */
	Table18 update(Table18 table18) throws EntityNotFoundException;

    /**
	 * Deletes a Table18.
	 *
	 * @param table18Id The id of the deleted Table18.
	 * @return The deleted Table18.
     *
	 * @throws EntityNotFoundException if no Table18 is found with the given id.
	 */
	Table18 delete(Table18Id table18Id) throws EntityNotFoundException;

	/**
	 * Finds all Table18s.
	 *
	 * @return A list of Table18s.
	 */
    @Deprecated
	Page<Table18> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table18s.
	 * @return A list of Table18s.
	 */
    Page<Table18> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table18s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table18.
	 */
	long count(String query);

    Page<Table18> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

