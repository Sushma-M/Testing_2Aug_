/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.demo.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.demo.Table20;

/**
 * Service object for domain model class Table20.
 *
 * @see {@link Table20}
 */
public interface Table20Service {

    /**
     * Creates a new Table20.
     *
     * @param table20 The information of the created CompositeTable.
     * @return The created Table20.
     */
	Table20 create(Table20 table20);


	/**
	 * Finds Table20 by id.
	 *
	 * @param table20Id The id of the wanted Table20.
	 * @return The found Table20. If no Table20 is found, this method returns null.
	 */
	Table20 getById(String table20Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table20.
	 *
	 * @param table20 The information of the updated Table20.
	 * @return The updated Table20.
     *
	 * @throws EntityNotFoundException if no Table20 is found with given id.
	 */
	Table20 update(Table20 table20) throws EntityNotFoundException;

    /**
	 * Deletes a Table20.
	 *
	 * @param table20Id The id of the deleted Table20.
	 * @return The deleted Table20.
     *
	 * @throws EntityNotFoundException if no Table20 is found with the given id.
	 */
	Table20 delete(String table20Id) throws EntityNotFoundException;

	/**
	 * Finds all Table20s.
	 *
	 * @return A list of Table20s.
	 */
    @Deprecated
	Page<Table20> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table20s.
	 * @return A list of Table20s.
	 */
    Page<Table20> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table20s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table20.
	 */
	long count(String query);

    Page<Table20> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

