/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.demo.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.demo.Table19;

/**
 * Service object for domain model class Table19.
 *
 * @see {@link Table19}
 */
public interface Table19Service {

    /**
     * Creates a new Table19.
     *
     * @param table19 The information of the created CompositeTable.
     * @return The created Table19.
     */
	Table19 create(Table19 table19);


	/**
	 * Finds Table19 by id.
	 *
	 * @param table19Id The id of the wanted Table19.
	 * @return The found Table19. If no Table19 is found, this method returns null.
	 */
	Table19 getById(Integer table19Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table19.
	 *
	 * @param table19 The information of the updated Table19.
	 * @return The updated Table19.
     *
	 * @throws EntityNotFoundException if no Table19 is found with given id.
	 */
	Table19 update(Table19 table19) throws EntityNotFoundException;

    /**
	 * Deletes a Table19.
	 *
	 * @param table19Id The id of the deleted Table19.
	 * @return The deleted Table19.
     *
	 * @throws EntityNotFoundException if no Table19 is found with the given id.
	 */
	Table19 delete(Integer table19Id) throws EntityNotFoundException;

	/**
	 * Finds all Table19s.
	 *
	 * @return A list of Table19s.
	 */
    @Deprecated
	Page<Table19> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table19s.
	 * @return A list of Table19s.
	 */
    Page<Table19> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table19s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table19.
	 */
	long count(String query);

    Page<Table19> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

