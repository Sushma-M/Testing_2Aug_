/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.wmstudio.Composite1;
import com.testing26thjuly_.wmstudio.Composite1Id;

/**
 * Service object for domain model class Composite1.
 *
 * @see {@link Composite1}
 */
public interface Composite1Service {

    /**
     * Creates a new Composite1.
     *
     * @param composite1 The information of the created CompositeTable.
     * @return The created Composite1.
     */
	Composite1 create(Composite1 composite1);


	/**
	 * Finds Composite1 by id.
	 *
	 * @param composite1Id The id of the wanted Composite1.
	 * @return The found Composite1. If no Composite1 is found, this method returns null.
	 */
	Composite1 getById(Composite1Id composite1Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Composite1.
	 *
	 * @param composite1 The information of the updated Composite1.
	 * @return The updated Composite1.
     *
	 * @throws EntityNotFoundException if no Composite1 is found with given id.
	 */
	Composite1 update(Composite1 composite1) throws EntityNotFoundException;

    /**
	 * Deletes a Composite1.
	 *
	 * @param composite1Id The id of the deleted Composite1.
	 * @return The deleted Composite1.
     *
	 * @throws EntityNotFoundException if no Composite1 is found with the given id.
	 */
	Composite1 delete(Composite1Id composite1Id) throws EntityNotFoundException;

	/**
	 * Finds all Composite1s.
	 *
	 * @return A list of Composite1s.
	 */
    @Deprecated
	Page<Composite1> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Composite1s.
	 * @return A list of Composite1s.
	 */
    Page<Composite1> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Composite1s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Composite1.
	 */
	long count(String query);

    Page<Composite1> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

