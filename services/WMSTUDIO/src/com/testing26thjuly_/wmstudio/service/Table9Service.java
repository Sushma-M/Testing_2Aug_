/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.wmstudio.Table9;

/**
 * Service object for domain model class Table9.
 *
 * @see {@link Table9}
 */
public interface Table9Service {

    /**
     * Creates a new Table9.
     *
     * @param table9 The information of the created CompositeTable.
     * @return The created Table9.
     */
	Table9 create(Table9 table9);


	/**
	 * Finds Table9 by id.
	 *
	 * @param table9Id The id of the wanted Table9.
	 * @return The found Table9. If no Table9 is found, this method returns null.
	 */
	Table9 getById(Integer table9Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table9.
	 *
	 * @param table9 The information of the updated Table9.
	 * @return The updated Table9.
     *
	 * @throws EntityNotFoundException if no Table9 is found with given id.
	 */
	Table9 update(Table9 table9) throws EntityNotFoundException;

    /**
	 * Deletes a Table9.
	 *
	 * @param table9Id The id of the deleted Table9.
	 * @return The deleted Table9.
     *
	 * @throws EntityNotFoundException if no Table9 is found with the given id.
	 */
	Table9 delete(Integer table9Id) throws EntityNotFoundException;

	/**
	 * Finds all Table9s.
	 *
	 * @return A list of Table9s.
	 */
    @Deprecated
	Page<Table9> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table9s.
	 * @return A list of Table9s.
	 */
    Page<Table9> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table9s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table9.
	 */
	long count(String query);

    Page<Table9> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

