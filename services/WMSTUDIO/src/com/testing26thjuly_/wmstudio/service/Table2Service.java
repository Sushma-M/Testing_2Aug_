/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.wmstudio.Table2;

/**
 * Service object for domain model class Table2.
 *
 * @see {@link Table2}
 */
public interface Table2Service {

    /**
     * Creates a new Table2.
     *
     * @param table2 The information of the created CompositeTable.
     * @return The created Table2.
     */
	Table2 create(Table2 table2);


	/**
	 * Finds Table2 by id.
	 *
	 * @param table2Id The id of the wanted Table2.
	 * @return The found Table2. If no Table2 is found, this method returns null.
	 */
	Table2 getById(Long table2Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table2.
	 *
	 * @param table2 The information of the updated Table2.
	 * @return The updated Table2.
     *
	 * @throws EntityNotFoundException if no Table2 is found with given id.
	 */
	Table2 update(Table2 table2) throws EntityNotFoundException;

    /**
	 * Deletes a Table2.
	 *
	 * @param table2Id The id of the deleted Table2.
	 * @return The deleted Table2.
     *
	 * @throws EntityNotFoundException if no Table2 is found with the given id.
	 */
	Table2 delete(Long table2Id) throws EntityNotFoundException;

	/**
	 * Finds all Table2s.
	 *
	 * @return A list of Table2s.
	 */
    @Deprecated
	Page<Table2> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table2s.
	 * @return A list of Table2s.
	 */
    Page<Table2> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table2s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table2.
	 */
	long count(String query);

    Page<Table2> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

