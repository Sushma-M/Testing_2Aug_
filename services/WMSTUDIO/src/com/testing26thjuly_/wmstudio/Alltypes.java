/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Alltypes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ALLTYPES`", schema = "SARASWATHI")
public class Alltypes implements Serializable {

    private int id;
    @JsonIgnore
    private byte[] blobcol;
    private String charstrcol;
    private BigDecimal doublecol;
    private BigInteger longbicol;
    private String stringcol;
    private Long shortlongCol;
    private Date timestampcol;
    private Double floatdoubleCol;
    private BigDecimal bytebdcol;
    private Byte bdbyte;
    private Short bishort;
    private Character clobchar;
    private String textcol;
    @Type(type = "DateTime")
    private LocalDateTime datecol;
    private Integer intcol;
    private Character boolean_;
    @Type(type = "DateTime")
    private LocalDateTime timecol;

    @Id
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 6)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "`BLOBCOL`", nullable = true)
    public byte[] getBlobcol() {
        return this.blobcol;
    }

    public void setBlobcol(byte[] blobcol) {
        this.blobcol = blobcol;
    }

    @Column(name = "`CHARSTRCOL`", nullable = true, length = 250)
    public String getCharstrcol() {
        return this.charstrcol;
    }

    public void setCharstrcol(String charstrcol) {
        this.charstrcol = charstrcol;
    }

    @Column(name = "`DOUBLECOL`", nullable = true, scale = 9, precision = 126)
    public BigDecimal getDoublecol() {
        return this.doublecol;
    }

    public void setDoublecol(BigDecimal doublecol) {
        this.doublecol = doublecol;
    }

    @Column(name = "`LONGBICOL`", nullable = true, scale = 0, precision = 36)
    public BigInteger getLongbicol() {
        return this.longbicol;
    }

    public void setLongbicol(BigInteger longbicol) {
        this.longbicol = longbicol;
    }

    @Column(name = "`STRINGCOL`", nullable = true, length = 255)
    public String getStringcol() {
        return this.stringcol;
    }

    public void setStringcol(String stringcol) {
        this.stringcol = stringcol;
    }

    @Column(name = "`SHORTLongCOL`", nullable = true, scale = 0, precision = 18)
    public Long getShortlongCol() {
        return this.shortlongCol;
    }

    public void setShortlongCol(Long shortlongCol) {
        this.shortlongCol = shortlongCol;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`TIMESTAMPCOL`", nullable = false)
    public Date getTimestampcol() {
        return this.timestampcol;
    }

    public void setTimestampcol(Date timestampcol) {
        this.timestampcol = timestampcol;
    }

    @Column(name = "`FLOATDoubleCOL`", nullable = true, scale = 8, precision = 18)
    public Double getFloatdoubleCol() {
        return this.floatdoubleCol;
    }

    public void setFloatdoubleCol(Double floatdoubleCol) {
        this.floatdoubleCol = floatdoubleCol;
    }

    @Column(name = "`BYTEBDCOL`", nullable = true, scale = 10, precision = 36)
    public BigDecimal getBytebdcol() {
        return this.bytebdcol;
    }

    public void setBytebdcol(BigDecimal bytebdcol) {
        this.bytebdcol = bytebdcol;
    }

    @Column(name = "`BDByte`", nullable = true, scale = 0, precision = 2)
    public Byte getBdbyte() {
        return this.bdbyte;
    }

    public void setBdbyte(Byte bdbyte) {
        this.bdbyte = bdbyte;
    }

    @Column(name = "`BIShort`", nullable = true, scale = 0, precision = 5)
    public Short getBishort() {
        return this.bishort;
    }

    public void setBishort(Short bishort) {
        this.bishort = bishort;
    }

    @Column(name = "`CLOBChar`", nullable = true, length = 1)
    public Character getClobchar() {
        return this.clobchar;
    }

    public void setClobchar(Character clobchar) {
        this.clobchar = clobchar;
    }

    @Column(name = "`TEXTCOL`", nullable = true, length = 500)
    public String getTextcol() {
        return this.textcol;
    }

    public void setTextcol(String textcol) {
        this.textcol = textcol;
    }

    @Column(name = "`DATECOL`", nullable = true)
    public LocalDateTime getDatecol() {
        return this.datecol;
    }

    public void setDatecol(LocalDateTime datecol) {
        this.datecol = datecol;
    }

    @Column(name = "`INTCOL`", nullable = true, scale = 0, precision = 10)
    public Integer getIntcol() {
        return this.intcol;
    }

    public void setIntcol(Integer intcol) {
        this.intcol = intcol;
    }

    @Column(name = "`BOOLEAN`", nullable = true, length = 1)
    public Character getBoolean_() {
        return this.boolean_;
    }

    public void setBoolean_(Character boolean_) {
        this.boolean_ = boolean_;
    }

    @Column(name = "`TIMECOL`", nullable = true)
    public LocalDateTime getTimecol() {
        return this.timecol;
    }

    public void setTimecol(LocalDateTime timecol) {
        this.timecol = timecol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Alltypes)) return false;
        final Alltypes alltypes = (Alltypes) o;
        return Objects.equals(getId(), alltypes.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

