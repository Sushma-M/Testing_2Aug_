/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.testingdb123.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.testingdb123.Table29;

/**
 * Service object for domain model class Table29.
 *
 * @see {@link Table29}
 */
public interface Table29Service {

    /**
     * Creates a new Table29.
     *
     * @param table29 The information of the created CompositeTable.
     * @return The created Table29.
     */
	Table29 create(Table29 table29);


	/**
	 * Finds Table29 by id.
	 *
	 * @param table29Id The id of the wanted Table29.
	 * @return The found Table29. If no Table29 is found, this method returns null.
	 */
	Table29 getById(String table29Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table29.
	 *
	 * @param table29 The information of the updated Table29.
	 * @return The updated Table29.
     *
	 * @throws EntityNotFoundException if no Table29 is found with given id.
	 */
	Table29 update(Table29 table29) throws EntityNotFoundException;

    /**
	 * Deletes a Table29.
	 *
	 * @param table29Id The id of the deleted Table29.
	 * @return The deleted Table29.
     *
	 * @throws EntityNotFoundException if no Table29 is found with the given id.
	 */
	Table29 delete(String table29Id) throws EntityNotFoundException;

	/**
	 * Finds all Table29s.
	 *
	 * @return A list of Table29s.
	 */
    @Deprecated
	Page<Table29> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table29s.
	 * @return A list of Table29s.
	 */
    Page<Table29> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table29s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table29.
	 */
	long count(String query);

    Page<Table29> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

