/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.testingdb123.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.testingdb123.Table55;

/**
 * Service object for domain model class Table55.
 *
 * @see {@link Table55}
 */
public interface Table55Service {

    /**
     * Creates a new Table55.
     *
     * @param table55 The information of the created CompositeTable.
     * @return The created Table55.
     */
	Table55 create(Table55 table55);


	/**
	 * Finds Table55 by id.
	 *
	 * @param table55Id The id of the wanted Table55.
	 * @return The found Table55. If no Table55 is found, this method returns null.
	 */
	Table55 getById(Long table55Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table55.
	 *
	 * @param table55 The information of the updated Table55.
	 * @return The updated Table55.
     *
	 * @throws EntityNotFoundException if no Table55 is found with given id.
	 */
	Table55 update(Table55 table55) throws EntityNotFoundException;

    /**
	 * Deletes a Table55.
	 *
	 * @param table55Id The id of the deleted Table55.
	 * @return The deleted Table55.
     *
	 * @throws EntityNotFoundException if no Table55 is found with the given id.
	 */
	Table55 delete(Long table55Id) throws EntityNotFoundException;

	/**
	 * Finds all Table55s.
	 *
	 * @return A list of Table55s.
	 */
    @Deprecated
	Page<Table55> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table55s.
	 * @return A list of Table55s.
	 */
    Page<Table55> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table55s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table55.
	 */
	long count(String query);

    Page<Table55> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

