/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.compositestest.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.compositestest.Table4;

/**
 * Service object for domain model class Table4.
 *
 * @see {@link Table4}
 */
public interface Table4Service {

    /**
     * Creates a new Table4.
     *
     * @param table4 The information of the created CompositeTable.
     * @return The created Table4.
     */
	Table4 create(Table4 table4);


	/**
	 * Finds Table4 by id.
	 *
	 * @param table4Id The id of the wanted Table4.
	 * @return The found Table4. If no Table4 is found, this method returns null.
	 */
	Table4 getById(String table4Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table4.
	 *
	 * @param table4 The information of the updated Table4.
	 * @return The updated Table4.
     *
	 * @throws EntityNotFoundException if no Table4 is found with given id.
	 */
	Table4 update(Table4 table4) throws EntityNotFoundException;

    /**
	 * Deletes a Table4.
	 *
	 * @param table4Id The id of the deleted Table4.
	 * @return The deleted Table4.
     *
	 * @throws EntityNotFoundException if no Table4 is found with the given id.
	 */
	Table4 delete(String table4Id) throws EntityNotFoundException;

	/**
	 * Finds all Table4s.
	 *
	 * @return A list of Table4s.
	 */
    @Deprecated
	Page<Table4> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table4s.
	 * @return A list of Table4s.
	 */
    Page<Table4> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table4s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table4.
	 */
	long count(String query);

    Page<Table4> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

