/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * ViewUser generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`View_User`", schema = "dbo")
@IdClass(ViewUserId.class)
public class ViewUser implements Serializable {

    private int userId;
    private String userName;
    private String password;
    private String role;

    @Id
    @Column(name = "`userID`", nullable = false, scale = 0, precision = 10)
    public int getUserId() {
        return this.userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    @Id
    @Column(name = "`user Name`", nullable = true, length = 255)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Id
    @Column(name = "`password`", nullable = true, length = 255)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "`role`", nullable = true, length = 255)
    public String getRole() {
        return this.role;
    }

    public void setRole(String role) {
        this.role = role;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ViewUser)) return false;
        final ViewUser viewUser = (ViewUser) o;
        return Objects.equals(getUserId(), viewUser.getUserId()) &&
                Objects.equals(getUserName(), viewUser.getUserName()) &&
                Objects.equals(getPassword(), viewUser.getPassword());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getUserId(),
                getUserName(),
                getPassword());
    }
}

