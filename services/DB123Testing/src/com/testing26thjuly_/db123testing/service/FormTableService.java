/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.FormTable;

/**
 * Service object for domain model class FormTable.
 *
 * @see {@link FormTable}
 */
public interface FormTableService {

    /**
     * Creates a new FormTable.
     *
     * @param formTable The information of the created CompositeTable.
     * @return The created FormTable.
     */
	FormTable create(FormTable formTable);


	/**
	 * Finds FormTable by id.
	 *
	 * @param formTableId The id of the wanted FormTable.
	 * @return The found FormTable. If no FormTable is found, this method returns null.
	 */
	FormTable getById(Integer formTableId) throws EntityNotFoundException;

	/**
	 * Updates the information of a FormTable.
	 *
	 * @param formTable The information of the updated FormTable.
	 * @return The updated FormTable.
     *
	 * @throws EntityNotFoundException if no FormTable is found with given id.
	 */
	FormTable update(FormTable formTable) throws EntityNotFoundException;

    /**
	 * Deletes a FormTable.
	 *
	 * @param formTableId The id of the deleted FormTable.
	 * @return The deleted FormTable.
     *
	 * @throws EntityNotFoundException if no FormTable is found with the given id.
	 */
	FormTable delete(Integer formTableId) throws EntityNotFoundException;

	/**
	 * Finds all FormTables.
	 *
	 * @return A list of FormTables.
	 */
    @Deprecated
	Page<FormTable> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all FormTables.
	 * @return A list of FormTables.
	 */
    Page<FormTable> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the FormTables in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the FormTable.
	 */
	long count(String query);

    Page<FormTable> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

