/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.Urtable1;

/**
 * Service object for domain model class Urtable1.
 *
 * @see {@link Urtable1}
 */
public interface Urtable1Service {

    /**
     * Creates a new Urtable1.
     *
     * @param urtable1 The information of the created CompositeTable.
     * @return The created Urtable1.
     */
	Urtable1 create(Urtable1 urtable1);


	/**
	 * Finds Urtable1 by id.
	 *
	 * @param urtable1Id The id of the wanted Urtable1.
	 * @return The found Urtable1. If no Urtable1 is found, this method returns null.
	 */
	Urtable1 getById(String urtable1Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Urtable1.
	 *
	 * @param urtable1 The information of the updated Urtable1.
	 * @return The updated Urtable1.
     *
	 * @throws EntityNotFoundException if no Urtable1 is found with given id.
	 */
	Urtable1 update(Urtable1 urtable1) throws EntityNotFoundException;

    /**
	 * Deletes a Urtable1.
	 *
	 * @param urtable1Id The id of the deleted Urtable1.
	 * @return The deleted Urtable1.
     *
	 * @throws EntityNotFoundException if no Urtable1 is found with the given id.
	 */
	Urtable1 delete(String urtable1Id) throws EntityNotFoundException;

	/**
	 * Finds all Urtable1s.
	 *
	 * @return A list of Urtable1s.
	 */
    @Deprecated
	Page<Urtable1> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Urtable1s.
	 * @return A list of Urtable1s.
	 */
    Page<Urtable1> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Urtable1s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Urtable1.
	 */
	long count(String query);

    Page<Urtable1> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

