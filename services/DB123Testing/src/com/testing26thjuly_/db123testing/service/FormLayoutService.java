/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.FormLayout;

/**
 * Service object for domain model class FormLayout.
 *
 * @see {@link FormLayout}
 */
public interface FormLayoutService {

    /**
     * Creates a new FormLayout.
     *
     * @param formLayout The information of the created CompositeTable.
     * @return The created FormLayout.
     */
	FormLayout create(FormLayout formLayout);


	/**
	 * Finds FormLayout by id.
	 *
	 * @param formLayoutId The id of the wanted FormLayout.
	 * @return The found FormLayout. If no FormLayout is found, this method returns null.
	 */
	FormLayout getById(Integer formLayoutId) throws EntityNotFoundException;

	/**
	 * Updates the information of a FormLayout.
	 *
	 * @param formLayout The information of the updated FormLayout.
	 * @return The updated FormLayout.
     *
	 * @throws EntityNotFoundException if no FormLayout is found with given id.
	 */
	FormLayout update(FormLayout formLayout) throws EntityNotFoundException;

    /**
	 * Deletes a FormLayout.
	 *
	 * @param formLayoutId The id of the deleted FormLayout.
	 * @return The deleted FormLayout.
     *
	 * @throws EntityNotFoundException if no FormLayout is found with the given id.
	 */
	FormLayout delete(Integer formLayoutId) throws EntityNotFoundException;

	/**
	 * Finds all FormLayouts.
	 *
	 * @return A list of FormLayouts.
	 */
    @Deprecated
	Page<FormLayout> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all FormLayouts.
	 * @return A list of FormLayouts.
	 */
    Page<FormLayout> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the FormLayouts in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the FormLayout.
	 */
	long count(String query);

    Page<FormLayout> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

