/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.Table65;

/**
 * Service object for domain model class Table65.
 *
 * @see {@link Table65}
 */
public interface Table65Service {

    /**
     * Creates a new Table65.
     *
     * @param table65 The information of the created CompositeTable.
     * @return The created Table65.
     */
	Table65 create(Table65 table65);


	/**
	 * Finds Table65 by id.
	 *
	 * @param table65Id The id of the wanted Table65.
	 * @return The found Table65. If no Table65 is found, this method returns null.
	 */
	Table65 getById(String table65Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table65.
	 *
	 * @param table65 The information of the updated Table65.
	 * @return The updated Table65.
     *
	 * @throws EntityNotFoundException if no Table65 is found with given id.
	 */
	Table65 update(Table65 table65) throws EntityNotFoundException;

    /**
	 * Deletes a Table65.
	 *
	 * @param table65Id The id of the deleted Table65.
	 * @return The deleted Table65.
     *
	 * @throws EntityNotFoundException if no Table65 is found with the given id.
	 */
	Table65 delete(String table65Id) throws EntityNotFoundException;

	/**
	 * Finds all Table65s.
	 *
	 * @return A list of Table65s.
	 */
    @Deprecated
	Page<Table65> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table65s.
	 * @return A list of Table65s.
	 */
    Page<Table65> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table65s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table65.
	 */
	long count(String query);

    Page<Table65> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

