/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.UsersTable;

/**
 * Service object for domain model class UsersTable.
 *
 * @see {@link UsersTable}
 */
public interface UsersTableService {

    /**
     * Creates a new UsersTable.
     *
     * @param usersTable The information of the created CompositeTable.
     * @return The created UsersTable.
     */
	UsersTable create(UsersTable usersTable);


	/**
	 * Finds UsersTable by id.
	 *
	 * @param usersTableId The id of the wanted UsersTable.
	 * @return The found UsersTable. If no UsersTable is found, this method returns null.
	 */
	UsersTable getById(Integer usersTableId) throws EntityNotFoundException;

	/**
	 * Updates the information of a UsersTable.
	 *
	 * @param usersTable The information of the updated UsersTable.
	 * @return The updated UsersTable.
     *
	 * @throws EntityNotFoundException if no UsersTable is found with given id.
	 */
	UsersTable update(UsersTable usersTable) throws EntityNotFoundException;

    /**
	 * Deletes a UsersTable.
	 *
	 * @param usersTableId The id of the deleted UsersTable.
	 * @return The deleted UsersTable.
     *
	 * @throws EntityNotFoundException if no UsersTable is found with the given id.
	 */
	UsersTable delete(Integer usersTableId) throws EntityNotFoundException;

	/**
	 * Finds all UsersTables.
	 *
	 * @return A list of UsersTables.
	 */
    @Deprecated
	Page<UsersTable> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all UsersTables.
	 * @return A list of UsersTables.
	 */
    Page<UsersTable> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the UsersTables in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the UsersTable.
	 */
	long count(String query);

    Page<UsersTable> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

