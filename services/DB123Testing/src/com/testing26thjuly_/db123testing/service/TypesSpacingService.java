/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.TypesSpacing;

/**
 * Service object for domain model class TypesSpacing.
 *
 * @see {@link TypesSpacing}
 */
public interface TypesSpacingService {

    /**
     * Creates a new TypesSpacing.
     *
     * @param typesSpacing The information of the created CompositeTable.
     * @return The created TypesSpacing.
     */
	TypesSpacing create(TypesSpacing typesSpacing);


	/**
	 * Finds TypesSpacing by id.
	 *
	 * @param typesSpacingId The id of the wanted TypesSpacing.
	 * @return The found TypesSpacing. If no TypesSpacing is found, this method returns null.
	 */
	TypesSpacing getById(Integer typesSpacingId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TypesSpacing.
	 *
	 * @param typesSpacing The information of the updated TypesSpacing.
	 * @return The updated TypesSpacing.
     *
	 * @throws EntityNotFoundException if no TypesSpacing is found with given id.
	 */
	TypesSpacing update(TypesSpacing typesSpacing) throws EntityNotFoundException;

    /**
	 * Deletes a TypesSpacing.
	 *
	 * @param typesSpacingId The id of the deleted TypesSpacing.
	 * @return The deleted TypesSpacing.
     *
	 * @throws EntityNotFoundException if no TypesSpacing is found with the given id.
	 */
	TypesSpacing delete(Integer typesSpacingId) throws EntityNotFoundException;

	/**
	 * Finds all TypesSpacings.
	 *
	 * @return A list of TypesSpacings.
	 */
    @Deprecated
	Page<TypesSpacing> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TypesSpacings.
	 * @return A list of TypesSpacings.
	 */
    Page<TypesSpacing> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TypesSpacings in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TypesSpacing.
	 */
	long count(String query);

    Page<TypesSpacing> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

