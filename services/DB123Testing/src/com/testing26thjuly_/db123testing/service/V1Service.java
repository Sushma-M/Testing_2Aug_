/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/

package com.testing26thjuly_.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testing26thjuly_.db123testing.V1;
import com.testing26thjuly_.db123testing.V1Id;

/**
 * Service object for domain model class V1.
 *
 * @see {@link V1}
 */
public interface V1Service {


	/**
	 * Finds V1 by id.
	 *
	 * @param v1Id The id of the wanted V1.
	 * @return The found V1. If no V1 is found, this method returns null.
	 */
	V1 getById(V1Id v1Id) throws EntityNotFoundException;

	/**
	 * Finds all V1s.
	 *
	 * @return A list of V1s.
	 */
    @Deprecated
	Page<V1> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all V1s.
	 * @return A list of V1s.
	 */
    Page<V1> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the V1s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the V1.
	 */
	long count(String query);

    Page<V1> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

